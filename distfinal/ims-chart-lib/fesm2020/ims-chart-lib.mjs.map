{"version":3,"file":"ims-chart-lib.mjs","sources":["../../../projects/ims-chart-lib/src/lib/ims-chart-lib.service.ts","../../../projects/ims-chart-lib/src/lib/services/masterRepoService.ts","../../../projects/ims-chart-lib/src/lib/services/decleration-master.service.ts","../../../projects/ims-chart-lib/src/lib/charts/ims-chart.component.ts","../../../projects/ims-chart-lib/src/lib/charts/ims-charts.component.html","../../../projects/ims-chart-lib/src/lib/ims-chart-lib.component.ts","../../../projects/ims-chart-lib/src/lib/ims-chart-lib.component.html","../../../projects/ims-chart-lib/src/lib/ims-chart-lib.module.ts","../../../projects/ims-chart-lib/src/lib/common/Classes/chartData.class.ts","../../../projects/ims-chart-lib/src/public-api.ts","../../../projects/ims-chart-lib/src/ims-chart-lib.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ImsChartLibService {\n\n  constructor() { }\n}\n","import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { HttpClient, HttpHeaders} from '@angular/common/http';\r\nimport { environment } from '../environment';\r\n\r\n\r\n\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MasterService {\r\n    // apiUrl = 'http://localhost:3000';\r\n    apiUrl: string='';\r\n    dailyWeekly:any;\r\n    CategoryNameList:any[]=[];\r\n    salesStatchart:any[]=[]\r\n    coverreportchart:any[]=[]\r\n    colspanVal!:string;\r\n  constructor(private router: Router,  public http: HttpClient,  ) { \r\n    //  this.apiUrl = localStorage.getItem(\"ims-chartApiUrl\") ?? environment.baseUrl\r\n  }\r\n\r\n  nullToZeroConverter(value:any) {\r\n    if (\r\n      value === undefined ||\r\n      value == null ||\r\n      value === '' ||\r\n      value === 'Infinity' ||\r\n      value === 'NaN' ||\r\n      isNaN(parseFloat(value))\r\n    ) {\r\n      return 0;\r\n    }\r\n    return parseFloat(value);\r\n  }\r\n\r\n  DashboardData( ) {\r\n\r\n    return this.http.get(this.apiUrl + `/charts`);\r\n\r\n}\r\n\r\n\r\n}\r\n","import { formatDate } from '@angular/common';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DeclerationMasterService {\r\n\r\n  Currdate: string;\r\n  Dataforchart: any[] = [];\r\n  ColSpanValue:any[]=[];\r\n\r\n\r\n\r\n  constructor() { \r\n    const today = new Date();\r\n    this.Currdate = formatDate(today, \"yyy-MM-dd\", 'en-US');\r\n  }\r\n}\r\n","import { Component, Input, OnInit, AfterViewInit, SimpleChanges, HostListener } from '@angular/core';\r\n// import { Chart, registerables } from 'chart.js';\r\nimport { Chart, registerables } from 'chart.js';\r\nimport { MasterService } from '../services/masterRepoService';\r\nimport { DeclerationMasterService } from '../services/decleration-master.service';\r\nimport { ChartData } from '../common/Classes/chartData.class';\r\n\r\ndeclare const window: any;\r\n\r\n@Component({\r\n  selector: 'ims-charts',\r\n  templateUrl: './ims-charts.component.html',\r\n  styleUrls: ['./ims-charts.component.scss']\r\n})\r\nexport class imsCharts implements OnInit,AfterViewInit {\r\n\r\n  isVisible:boolean=false;\r\n  datamode:any;\r\n  ChangesValue:any\r\n  dashboardData:any[]=[];\r\n  @Input() myinputMsg!: string;\r\n  @Input() chartname!: string;\r\n  @Input('ChartType') chartType!: string;\r\n  @Input('colSpan') colSpan!: string;\r\n  @Input('canvasId') canvasId!: number;\r\n  @Input('index') index!: number;\r\n  @Input('chartData') chardata:ChartData[]=[];\r\n  public chart: any;\r\n  Labels:string[]=[];\r\n  Yaxis:string[]=[];\r\n  Xaxis:string[]=[];\r\n  colors:string[]=[];\r\n  @Input('options')options:any;\r\n  @Input('barLine') barLine?: number;\r\n\r\n\r\n  chartData:any[] =[];\r\n  indexData:any[] = [];\r\n  chartTypeData:any[]=[];\r\n  colSpanData:any[]=[];\r\n\r\n\r\n  constructor(public masterService: MasterService,  public declerationService: DeclerationMasterService,) {\r\n    Chart.register(...registerables);\r\n    // this.chartType=\"doughnut\"\r\n\r\n   }\r\n  \r\n\r\n  ngOnInit() {\r\n  \r\n  }\r\n  \r\n//   @HostListener('document:click', ['$event', '$event.target'])\r\n//     onClick(event: MouseEvent){\r\n//       this.isVisible=true;\r\n//     }\r\n\r\ndistroyChart(){\r\n  let iid =  this.ChangesValue?.canvasId?.currentValue\r\n var chart = Object.values(Chart.instances).filter((c) => c.canvas.id == iid).pop()\r\n chart?.destroy();\r\n\r\n}\r\n\r\n\r\n  ChooseChartType(value:any){\r\n    this.chartType= value.target.value;\r\n    this.getCanvasChrtType(this.chartType)\r\n    this.reload();\r\n    \r\n  }\r\n \r\n  ChooseColSpan(value: any) {\r\n    const newValue = value.target.value;\r\n    this.declerationService.ColSpanValue[this.index] = newValue;\r\n    console.log('ccc', this.declerationService.ColSpanValue[this.index]);\r\n     this.reload();\r\n    \r\n  }\r\n  showhide(){}\r\n  \r\n  reload(){\r\n    let iid = this.ChangesValue?.canvasId?.currentValue;\r\n    let chartsddata: any[] = [];\r\n    chartsddata = this.chartData[0];\r\n    this.distroyChart();\r\n    this.createChart(chartsddata, iid, this.chartType);\r\n\r\n  }\r\n\r\ncreateChart(chexkdataObj:any,canvasId:string,chartType:string){\r\n  var data:any;\r\n   let chexkdata:any=[];\r\n  //  chexkdata.push(chexkdataObj);\r\n  // console.log('chexkdata', chexkdata)\r\n  if(chartType=='bar' && chexkdataObj.length >0){\r\n     data = this.mapDataForBar(chexkdataObj)\r\n\r\n  }\r\n  if(chartType=='pie' || chartType=='doughnut' && chexkdataObj.length >0){\r\n     data = this.mapDataForPie(chexkdataObj)\r\n\r\n  }\r\n  if(chartType=='line' && chexkdataObj.length >0){\r\n     data = this.mapDataForLine(chexkdataObj,'line')\r\n\r\n  }\r\n\r\n    \r\n    //   if (window.myCharts != undefined )\r\n    //   window.myCharts.destroy();\r\n    // window.myCharts  = \r\n var myChart =new Chart(`${canvasId}`, data)\r\n console.log('myChart', myChart)\r\n  \r\n\r\n\r\nconsole.log('cdataid',window.myCharts  );\r\n\r\n}\r\n\r\n\r\nmapDataForBar(chartdata:ChartData[]){\r\n\r\n    var lbs= chartdata.filter((thing,i,data)=>data.findIndex(t=>t.group==thing.group)===i).map(x=>x.group);\r\n    var categories= chartdata.filter((thing,i,data)=>data.findIndex(t=>t.category==thing.category)===i);\r\n   \r\n    \r\n    var categoryDataSets:any[]=[]\r\n    categories.forEach(cat=>{\r\n    var catData=chartdata.filter(x=>x.category==cat.category).map(y=>y.value);\r\n    \r\n    var categorydata = { \r\n      label:cat.category,\r\n      data:catData,\r\n      backgroundColor:cat.color\r\n    }\r\n    categoryDataSets.push(categorydata);   \r\n  });\r\n  return {\r\n    type:'bar',\r\n    data:{\r\n      labels:lbs,\r\n      datasets:categoryDataSets,\r\n    }\r\n  } \r\n  \r\n}\r\n\r\nmapDataForLine(chartdata:ChartData[],charttype:string='line'){\r\n  var lbs= chartdata.filter((thing,i,data)=>data.findIndex(t=>t.group==thing.group)===i).map(x=>x.group);\r\n  var categories= chartdata.filter((thing,i,data)=>data.findIndex(t=>t.category==thing.category)===i);\r\n  var categoryDataSets:any[]=[]\r\n  categories.forEach(cat=>{\r\n    var catData=chartdata.filter(x=>x.category==cat.category).map(y=>y.label);\r\n    var categorydata = { \r\n      label:'last month',\r\n      data:catData,\r\n      backgroundColor:cat.color,\r\n      tension:0.3,\r\n      \r\n    }\r\n    var catData2=chartdata.filter(x=>x.category==cat.category).map(y=>y.value);\r\n    var categorydata2 = { \r\n      label:'this month',\r\n      data:catData2,\r\n      backgroundColor:cat.color,\r\n      tension:0.3\r\n    }\r\n    categoryDataSets.push(categorydata);\r\n    categoryDataSets.push(categorydata2);\r\n  });\r\n  return {\r\n    type:charttype,\r\n    data:{\r\n      labels:lbs,\r\n      datasets:categoryDataSets,\r\n    },\r\n    options: this.options\r\n  } \r\n  \r\n}\r\n\r\nmapDataForPie(chartdata:ChartData[]){\r\n  var lbs= chartdata.filter((thing,i,data)=>data.findIndex(t=>t.group==thing.group)===i).map(x=>x.group);\r\n  // var categories= chartdata.filter((thing,i,data)=>data.findIndex(t=>t.category==thing.category)===i);\r\n  var categoryDataSets:any[]=[]\r\n  // categories.forEach(cat=>{\r\n    var value=chartdata.map(y=>y.value);\r\n    var label=chartdata.map(y=>y.label);\r\n   \r\n    var categorydata = { \r\n      // label:label,\r\n      data:value,\r\n      // backgroundColor:cat.color\r\n    }\r\n    categoryDataSets.push(categorydata);\r\n  // });\r\n  return {\r\n    type:this.chartType,\r\n    data:{\r\n      labels:lbs,\r\n      datasets:categoryDataSets,\r\n    }\r\n  } \r\n  \r\n}\r\n\r\n\r\n  ngOnChanges(changes:SimpleChanges) {\r\n    console.log('changes', changes,changes?.['chardata']?.currentValue)\r\n        // this.chartType='pie'\r\n        this.chartData.push(changes?.['chardata']?.currentValue);        \r\n        this.indexData.push(changes?.['canvasId']?.currentValue);\r\n        this.chartTypeData.push(changes?.['chartType']?.currentValue)\r\n        this.colSpanData.push(changes?.['colSpan']?.currentValue)\r\n\r\n        this.ChangesValue=changes\r\n    console.log('chartType',this.chartType)\r\n\r\n    }\r\n\r\n  \r\n  ngAfterViewInit() {\r\n    this.getchartdataAId();\r\n    }\r\n\r\n getchartdataAId(){\r\n  for (let index = 0; index < this.indexData.length; index++) {\r\n    this.createChart(this.chartData[index],this.indexData[index],this.chartTypeData[index] );    \r\n    this.getCanvaId(this.indexData[index]); \r\n    this.getCanvasChrtType(this.chartTypeData[index]);   \r\n    this.getColSpanValue(this.colSpanData[index]); \r\n         \r\n  }\r\n\r\n }\r\n\r\n getCanvaId(canvaid:string):string{\r\n  return canvaid;\r\n }\r\n getCanvasChrtType(getChartype:string):string{\r\n  return getChartype;\r\n }\r\n getColSpanValue(ColSpanValue:string):string{\r\n  return ColSpanValue;\r\n }\r\n\r\n}\r\n","<div class=\"ChartSettings\" (click)=\"isVisible = !isVisible\">\r\n  <div class=\"row\" style=\"float: right;\r\n  margin-top: -35px; cursor: pointer;\">\r\n<div class=\"icon\">\r\n  <img style=\"width:35px; margin-right: 20px;\" src=\"../../assets/setting.png\" alt=\"\">\r\n</div>\r\n  </div>\r\n</div>\r\n\r\n\r\n<div class=\"settingInputs\" *ngIf=\"isVisible\">\r\n  <div class=\"colspans d-flex mb-2 align-items-center \">\r\n    <label class=\"form-check-label\" for=\"flexCheckDefault\" style=\"flex:0 0 45%\">\r\n      <strong>Col Span :</strong>\r\n    </label>\r\n    <input type=\"text\" class=\"form-control\" (keydown.enter)=\"ChooseColSpan($event)\" (keydown.enter)=\"reload()\"> \r\n\r\n  </div>\r\n        <div class=\"chartTypeinputs d-flex align-items-center\" style=\"width:100%\">\r\n\r\n        \r\n              \r\n              <label class=\"form-check-label\" for=\"flexCheckDefault\" style=\"flex:0 0 45%\">\r\n                <strong>Chart Type :</strong>\r\n              </label>\r\n             <select class=\"form-control\" (change)=\"ChooseChartType($event)\" [(ngModel)]=\"chartType\">\r\n                <option value=\"line\">Line</option>\r\n                <option value=\"bar\">bar</option>\r\n                <option value=\"pie\">pie</option>\r\n                <option value=\"doughnut\">doughnut</option>\r\n             </select>     \r\n        </div>\r\n        \r\n</div>\r\n\r\n    <canvas [id]=\"canvasId\"></canvas>\r\n \r\n       \r\n  \r\n      \r\n     \r\n     \r\n    \r\n","import { Component, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { imsCharts } from './charts/ims-chart.component';\nimport { MasterService } from './services/masterRepoService';\nimport { Router } from '@angular/router';\nimport { DeclerationMasterService } from './services/decleration-master.service';\nimport { HttpClient } from '@angular/common/http';\n\n\n\n@Component({\n  selector: 'lib-imsChartLib',\n  templateUrl: './ims-chart-lib.component.html',\n  styleUrls: ['./style.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\n// export class ImsChartLibComponent {\n\n// }\n\n\nexport class ImsChartLibComponent {\n\n  @ViewChild('imschart') chartComp!: imsCharts ;\n  newData: any[] = [];\n  charttype!:string;\n  dataforloop:any[]=[];\n  callChartSelector:boolean=false;\n\n\n  option1 = {\n    responsive: true,\n    maintainAspectRatio: true,\n    plugins: {\n      legend: {\n        display: false\n      }\n    },\n    scales: {\n      x: {\n        grid: {\n          display: false\n        }\n      },\n\n    }\n\n\n  }\n\n  public chart: any;\n  \n  constructor( public http: HttpClient, private router: Router, public masterService: MasterService, public declerationService: DeclerationMasterService,) {\n    // this.http.get(\"./appConfig.json\")\n    // .subscribe((data:any)=>{\n    //   localStorage.setItem(\"ims-chartApiUrl\", data.apiUrl)        \n    // });\n   \n    this.dashboardmaindata();\n\n  }\n\n \n  ChooseColSpan(value:any){\n this.declerationService.ColSpanValue= value.target.value\n console.log('changecol', this.declerationService.ColSpanValue)\n//  this.chartComp.ChooseColSpan();\n\n  }\n \n  getChartData(index: number): any {\n     return this.dataforloop[index+1];\n  }\n\n  dashboardmaindata() {\n    this.masterService.DashboardData().subscribe((mainData: any) => {\n      this.dataforloop = mainData;\n      \n      this.callChartSelector=true;\n\n      console.log('this.dataforloop', this.dataforloop,this.callChartSelector);\n\n      // DATA CONVERSION\n      let getccdata: any[] = [];\n      mainData.map((p: any) => {\n        getccdata.push(p.ccdata);\n        // this.declerationService.ColSpanValue=(p.colSpan)\n      });\n      console.log('this.getccdata', getccdata);\n  \n      getccdata.forEach((element: any) => {\n        for (let i of element) {\n            i.value = i.STOCK;\n            i.group = i.ACNAME;\n            i.label = i.label;\n            i.category = i.category;\n        \n        }\n        this.declerationService.Dataforchart.push(element);\n      });\n  \n      console.log('this.Dataforchart', this.declerationService.Dataforchart);\n    });\n  }\n  \n\n\n\n\n\n\n  \n\n\n\n\n\n\n}\n\n","<div class=\"home_content\">\r\n    <div class=\"dashboardContents\">\r\n      <div class=\"row mainDashboardFirstWrapper\" style=\"margin: 0;\">\r\n        <ng-container  >\r\n          <ng-container *ngFor=\"let data of dataforloop; let i = index \">\r\n              <div  *ngIf=\"this.declerationService.ColSpanValue[i]\" class=\"col-lg-{{this.declerationService.ColSpanValue[i]}}\">\r\n              <div class=\"bar-chart-container \">\r\n                <div class=\"chartsheading\">\r\n                  <div class=\"left\">\r\n                    <h5 >{{data.title}}  </h5>\r\n                  \r\n                  </div>\r\n            \r\n                </div>\r\n    \r\n                <ims-charts  [colSpan]=\"data.colSpan\" [index]=\"i\" [ChartType]=\"data.chartType\" [chartData]=\"this.declerationService.Dataforchart[data.canvasId]\" [canvasId]=\"data.canvasId\" [options]=\"option1\" style=\"width: 100%\"></ims-charts>\r\n  \r\n              </div>\r\n            </div>\r\n            <div  *ngIf=\"!this.declerationService.ColSpanValue[i]\"class=\"col-lg-{{data.colSpan}}\">\r\n              <div class=\"bar-chart-container \">\r\n                <div class=\"chartsheading\">\r\n  \r\n                 \r\n                  <div class=\"left\">\r\n                    <h5 >{{data.title}}  </h5>\r\n                    <!-- <h5>{{data.colSpan}}</h5> -->\r\n                  <!-- <input type=\"text\"  (change)=\"ChooseColSpan($event)\" [(ngModel)]=\"data.colSpan\"> -->\r\n                  </div>\r\n            \r\n                </div>\r\n    \r\n                <ims-charts   [index]=\"i\" [ChartType]=\"data.chartType\" [chartData]=\"this.declerationService.Dataforchart[data.canvasId]\" [canvasId]=\"data.canvasId\" [options]=\"option1\" style=\"width: 100%\"></ims-charts>\r\n  \r\n              </div>\r\n            </div>\r\n          </ng-container>\r\n        </ng-container>\r\n      </div>\r\n  \r\n    </div>\r\n  </div>","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { ImsChartLibComponent } from './ims-chart-lib.component';\nimport { MasterService } from './services/masterRepoService';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { DeclerationMasterService } from './services/decleration-master.service';\nimport { imsCharts } from './charts/ims-chart.component';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { CommonModule } from '@angular/common';\n\n\n\n@NgModule({\n  declarations: [\n    ImsChartLibComponent,\n    imsCharts\n   \n\n  ],\n  imports: [\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    BrowserModule,\n    CommonModule\n    \n  ],\n  exports: [\n    ImsChartLibComponent, imsCharts\n  ],\n\n  providers:[MasterService, HttpClient, DeclerationMasterService]\n})\n\n\nexport class ImsChartLibModule {\n  static forRoot():ModuleWithProviders<ImsChartLibModule>{\n    return {\n      ngModule:ImsChartLibModule,\n      \n    }\n  }\n}\n","export class ChartData{\r\n    chartType:string=\"\";\r\n    group:string='';\r\n    category:string='';\r\n    label?:string='';\r\n    color:string='';\r\n    status?:string='';\r\n    value:any;\r\n\r\n}\r\n","/*\n * Public API Surface of ims-chart-lib\n */\n\nexport * from './lib/ims-chart-lib.service';\nexport * from './lib/ims-chart-lib.component';\nexport * from './lib/ims-chart-lib.module';\n\nexport * from './lib/common/Classes/chartData.class';\n\nexport * from './lib/charts/ims-chart.component';\nexport * from './lib/charts/ims-chart.component';\nexport * from './lib/services/decleration-master.service';\nexport * from './lib/services/masterRepoService';\n\n\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i1.MasterService","i2.DeclerationMasterService","i4","i1","i2","i3.MasterService","i4.DeclerationMasterService","i6.imsCharts"],"mappings":"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"}